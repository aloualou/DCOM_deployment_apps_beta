<dashboard>
  <label>Cisco Sourcefire Configuration</label>
  
  <row>
    <html>
	
<h2>Steps to Configuring Cisco Security Suite for Cisco Sourcefire</h2>

<h3 style="color:#29688A;font-weight:bold; padding-top:15px">Preparation</h3>

<p style="padding: 15px">
<b style="font-size:18px">Important:</b>
In order to integrate Cisco Sourcefire data in the the Cisco Security Suite for Splunk application, the <a href="http://apps.splunk.com/app/1629/">Cisco eStreamer for Splunk</a> app
must first be installed.  Please refer to the setup directions included with that app for more information.
</p>

<p>
After you install eStreamer for Splunk, there are several things that
you need to verify to ensure your eStreamer client functions properly and
communicates with the Defense Center.</p>
<p>
Begin by creating the client certificate for the Splunk server from the Defense
Center web interface. You can accomplish by logging into the Defense Center with
an Admin account and selecting <b>System > Local > Registration</b>, then
clicking the <b>Create Client</b> button. Sourcefire recommends that you use the
IP address of the Splunk server rather than its hostname. The password is
optional. Download the pkcs12 certificate and copy it onto the Splunk server.
</p>

<p>If you are wanting to collect flow/connection data, connection logging must
be enabled in the Access Control Policy rules where the logging is desired. This
also goes for the Security Intelligence events -- logging must be enabled on the
Security Intelligence tab of the Access Control Policy.
</p>

<p>
Next, you must validate that the required Perl modules are on the system. The
following Perl modules are required for the eStreamer client to run:
</p>

<ul>
	<li>Getopt::Long</li>
	<li>Socket</li>
	<li>IO::Socket::SSL</li>
	<li>NetAddr::IP</li>
	<li>Storable</li>
	<li>Socket6                     - Only required if IPv6 is used</li>
	<li>IO::Socket::INET6     - Only required if IPv6 is used</li>
</ul>

<p>
Next, you must validate that the eStreamer client functions correctly. Access
the Splunk server terminal and navigate to the eStreamer for Splunk app directory.
Next, enter the bin directory (<tt>$SPLUNK_HOME/etc/apps/eStreamer/bin/</tt>). From
this directory, run the eStreamer client as follows:
</p>
<pre>./estreamer_client.pl</pre>

<p>
You should see the usage options present themselves. If you see errors, that
means a required Perl module is missing.  Look at the error message to determine
which module is needed and install it. Continue this process until the client
runs without errors.
</p>


  
<h3 style="color:#29688A;font-weight:bold; padding-top:15px">Configuration for the Cisco eStreamer for Splunk</h3>

<p>
After you have prepared the Splunk server as described above, you can configure
the app. You can reach the Setup page for the app in several ways
(<a href="/manager/eStreamer/apps/local/eStreamer/setup?action=edit"
target="_blank">including this link</a>) and then configure the app.
</p>

<p>
The Setup page includes all of the details associated with the app, including
how the eStreamer client connects to the Sourcefire Defense Center, such as
Defense Center IP address, IP protocol (v4 or v6), the port, and the pkcs12
certificate details. Enter the details as appropriate, making sure to provide
the full path to the pkcs12 certificate on the Splunk server.
</p>

<p>
There are three log options that are unchecked by default; <b>Log packets</b>,
<b>Log flows</b>, and <b>Log metadata</b>. Packet logs make the packets
associated with intrusion events easily accessible directly from Splunk
searches but can consume large amounts of disk space quickly. The flow logs
provide connection-level detail for the traffic traversing the network. The
metadata logs show some of the eStreamer log detail, but don't directly
provide value for event analysis.
</p>

<p>
After you complete the configuration, you can clear the <b>Disable eStreamer
client</b> checkbox. Until the app is configured, this should remain checked.
</p>

<p>
At this point the app has been configured, and the eStreamer client should
start within a minute or so. This is where you should start monitoring the
eStreamer client for possible issues. The <b>Help</b> menu in the app includes a
<b>Client Status</b> item that will provide you with a view of the status
messages from the eStreamer client check script.
</p>


    </html>
  </row>
  
</dashboard>