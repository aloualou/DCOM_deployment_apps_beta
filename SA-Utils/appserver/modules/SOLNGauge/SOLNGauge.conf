[module]
className = Splunk.Module.SOLNGauge
superClass = Splunk.Module.DispatchingModule
description = This module creates a functional percentage gauge that smiles at 0% and frowns as you get close to 100%. Please note if you intend to use this module it requires SOLNCommon and IncludeD3.

[param:width]
required = false
label = This is the field that determines the width of the guage. Default value is 230px

[param:height]
required = false
label = This is the field that determines the height of the guage. Default value is 230px

[param:enableResize]
required = false
label = This is the field to enable/disable resize of the guage. Value for this field can be true or false. Default is false (Note : div or window resizing is not supported by smileyGauge)

[param:thresholdFieldsLength]
required = false
label = This is the field used for determining number of threshold levels. By default this value is 4. Main use case for this field is to determine that if true X value is returned by Splunk Gauge command. (Applicable for Noel Gauge only)

[param:valueField]
required = false
label = This is the field that determines the value of the fill of the bar gauge. If unspecified defaults to the x field (this is the output of the gaugetable command).

[param:gaugeType]
required = false
label = This is the field that determines type of gauge. Value for this field would be noelGuage or smileyGauge. Default is noelGauge

[param:showTicks]
required = false
label = This is the field to show tickets in noel gauge for different threshold levels. Default is false

[[param:thresholdFields]
required = False
label = These are the fields used for determining color assignment. By default they are the fields yXX where XX is an int (this is the output of the gaugetable command). Colors are assigned in terms of being between the thresholdFields' values. Thus, there should be 1 more color defined than threshold field. 

[param:colors]
required = False
label = (Applicable only for smileyGauge) Supply a comma separated list of colors. If you do not provide this list a default color palette will be used. Colors are assigned based on the threshold fields. Its overwrite charting.gaugeColors property.

/*
 Note : resize is not applicable for smiley
 The above values is applicable for Noel Gauge 
        charting.chart.showValue   ---  (Optional) true/false to show gauge value (Default true) 
		charting.chart.showLabels  ---  (Optional) true/false to show gauge label (Default true)
		charting.gaugeColors       ---  (Required) A list of hexadecimal color values from which the range band colors are generated. Colors display in the order indicated in the array. For example, you can reverse the default green-yellow-red sequence by changing the gaugeColors value to [0xBF3030,0xFFE800,0x84E900]. You can specify any number of colors
		charting.chart.style       ---  (Optional) Enables the choice between two basic gauge appearances. The shiny style is a graphically stylized version of the gauge with with chrome, shading, and so on so that it mimics those in the real world. The minimal style is a stripped-down "just the basics" version of the gauge. (default shiny)
		charting.primaryAxisTitle.text  -- (Required) Text which is show in the Gauge label
		charting.chart.rangeValues   ---  (Optional) A numeric array that represents the overall numerical range represented by the gauge. For example, a range of [0,30,70,100] would indicate that the gauge starts at zero, ends at 100.
		charting.chart.rangeStartAngle  -- (Optional) Starting Gauge angle from mid bottom (Default is 30) 
		charting.chart.rangeArcAngle  --  (Optional) Gauge Arc Angle (Default is 300)
		charting.chart.usePercentageRange -- (Optional) Determines whether the range values should be formatted as percentages. (Default false)
		charting.chart.usePercentageValue  -- (Optional) Determines whether to format the gauge value as a percentage. (Default false)
		charting.chart.labelStyle  -- (Optional) Style of label shown in bottom of gauge
		charting.chart.valueStyle   -- (Optional) Provides the style properties for the value at the bottom of the gauge. Note that valueStyle can be used to change the way the value displays (font, bolding, italicization, and so on.), but it can't be used to actually change the text itself. For example, you can't use valueStyle to replace the value with a specific text string.	
	
*/