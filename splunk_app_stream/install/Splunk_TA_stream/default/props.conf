################################################################################
# Main stanza for all source=stream events.
################################################################################
[source::stream*]
KV_MODE = json
NO_BINARY_CHECK = 1
SHOULD_LINEMERGE=false
TIME_PREFIX="endtime":"
MAX_TIMESTAMP_LOOKAHEAD=28
TRUNCATE=100000000
REPORT-src_for_stream = src_ip_as_src,src_name_as_src,src_mac_as_src
REPORT-dest_for_stream = dest_ip_as_dest,dest_name_as_dest,dest_mac_as_dest
FIELDALIAS-duration_for_stream = time_taken as duration

################################################################################
# Stanzas for each protocol sourcetype
################################################################################
[stream:dhcp]
LOOKUP-app_proto = stream_app_lookup sourcetype OUTPUT app,protocol
FIELDALIAS-ip_lease_time_as_lease_duration = ip_lease_time AS lease_duration

[stream:http]
LOOKUP-app_proto = stream_app_lookup sourcetype OUTPUT app,protocol
EVAL-action = case(status>=200 AND status<300, "allowed", \
                                   status>=400, "blocked")
EVAL-url="http".if(isnotnull(ssl_version),"s","")."://".site.if(dest_port=443 OR dest_port=80,"",":".dest_port).uri_path

[stream:smtp]
LOOKUP-app_proto		= stream_app_lookup sourcetype OUTPUT app,protocol
## For SMTP, the act of delivery simply implies that the message has been queued up for delivery, for that matter event a QUIT message by the server.
EVAL-action 			= case (response_code >= 421, "blocked", response_code >= 200 AND response_code < 421, "delivered", isnotnull(response_code), "unknown")
EVAL-receiver_count 		= if (isnotnull(receiver_rcpt_to), 1, 0)
## Convert reponse time from micro-seconds to seconds
EVAL-delay 			= time_taken/1000000
FIELDALIAS-email_recipient  	= receiver_email as recipient
FIELDALIAS-email_src_user 	= sender as src_user
FIELDALIAS-email_status_code 	= response_code as status_code
FIELDALIAS-email_file_name 	= attach_filename as file_name
FIELDALIAS-email_file_size	= attach_size as file_size
FIELDALIAS-email_size 		= bytes as size
FIELDALIAS-email_process	= useragent as process

[stream:pop3]
LOOKUP-app_proto		= stream_app_lookup sourcetype OUTPUT app,protocol
## Following is a MV string.
EVAL-orig_recipient 		= receiver_email
EVAL-action 			= case ((method == "dele" AND match(server_response,"^\+OK.*")), "deleted", (method == "retr" AND match(server_response,"^\+OK.*")), "delivered", isnotnull(method), "unknown")
## Convert response time from micro-seconds to seconds
EVAL-delay 			= time_taken/1000000
TRANSFORMS-mask_password 	= mask_password 
FIELDALIAS-email_recipient  	= receiver as recipient 
FIELDALIAS-email_src_user 	= sender as src_user
FIELDALIAS-email_status_code 	= server_response as status_code
FIELDALIAS-user 		= login as user
FIELDALIAS-file_name 		= attach_filename as file_name
FIELDALIAS-size 		= bytes as size
FIELDALIAS-orig_src 		= sender_email as orig_src

[stream:imap]
LOOKUP-app_proto		= stream_app_lookup sourcetype OUTPUT app,protocol
## Convert response time from micro-seconds to seconds
EVAL-delay                      = time_taken/1000000
## OK, ERROR or UNKNOWN
EVAL-status_code                = case (isnotnull(server_response) AND match(server_response, "^.*OK.*"), "OK", isnotnull(server_response), "ERROR", isnull(server_response), "UNKNOWN")
##
## 'action' implies different things to different CIMs
## Email - delivered, deleted
## Auth  - success, failure
EVAL-action                     = case (((method == "SELECT" OR method=="EXAMINE" OR method=="LIST") AND match(server_response, "^.*OK.*")),"delivered", ((method == "AUTHENTICATE" OR method == "LOGIN") AND match(server_response, "^.*OK.*")), "success", ((method == "AUTHENTICATE" OR method == "LOGIN") AND (match(server_response, "^.*NO.*") OR match(server_response, "^.*BAD.*"))), "failure", (method == "EXPUNGE" AND match(server_response, "^.*OK.*")), "deleted", isnotnull(method), "unknown")
TRANSFORMS-mask_password        = mask_password
FIELDALIAS-email_process        = user_agent AS process
FIELDALIAS-email_size           = bytes AS size
FIELDALIAS-email_file_name      = attach_filename AS filename
## Email address of the receiver; MV field
FIELDALIAS-email_recipient      = receiver_email AS recipient
## Email address of sender
FIELDALIAS-email_src_user       = sender_email AS src_user
## Name of sender
FIELDALIAS-email_orig_src       = sender AS orig_src

[stream:tcp]
KV_MODE = JSON
FIELDALIAS-ssl_hash              = ssl_cert_md5 as ssl_hash
FIELDALIAS-ssl_serial            = ssl_serialnumber as ssl_serial

## issuer  - C=US, ST=CA, L=San Francisco, O=Splunk Inc, CN=splunk
REPORT-ssl_issuer_subs_for_stream = ssl_issuer_common_name,ssl_issuer_country,ssl_issuer_email,ssl_issuer_locality,ssl_issuer_organization,ssl_issuer_state,ssl_issuer_street,ssl_issuer_unit

## subject - C=US, ST=CA, L=San Francisco, O=Splunk Inc, CN=splunk
REPORT-ssl_subject_subs_for_stream = ssl_subject_common_name,ssl_subject_country,ssl_subject_email,ssl_subject_locality,ssl_subject_organization,ssl_subject_state,ssl_subject_street,ssl_subject_unit

## validity - string2epoch2iso8601_format
EVAL-ssl_start_time                 = strptime(ssl_validity_start, "%b %d %H:%M:%S %Y %Z")
EVAL-ssl_end_time                   = strptime(ssl_validity_end, "%b %d %H:%M:%S %Y %Z")
EVAL-transport = "tcp"

# Database source types
[stream:tns]
LOOKUP-app_proto = stream_app_lookup sourcetype OUTPUT app,protocol
# extract the "object" (usually table name) field
REPORT-extract_object_for_stream_db = object_from_select_query,object_from_update_query,object_from_insert_query,object_from_delete_query,object_from_create_table_query,object_from_drop_table_query,object_from_truncate_query
FIELDALIAS-instance_name_for_stream_databases = dbname AS instance_name
FIELDALIAS-instance_version_for_stream_databases = version AS instance_version
FIELDALIAS-login_as_user = login AS user
EVAL-query_time = strptime(timestamp, "%Y-%m-%dT%H:%M:%S.%6NZ")

[stream:postgres]
LOOKUP-app_proto = stream_app_lookup sourcetype OUTPUT app,protocol
# extract the "object" (usually table name) field
REPORT-extract_object_for_stream_db = object_from_select_query,object_from_update_query,object_from_insert_query,object_from_delete_query,object_from_create_table_query,object_from_drop_table_query,object_from_truncate_query
FIELDALIAS-instance_name_for_stream_databases = dbname AS instance_name
FIELDALIAS-instance_version_for_stream_databases = version AS instance_version
FIELDALIAS-login_as_user = login AS user
EVAL-query_time = strptime(timestamp, "%Y-%m-%dT%H:%M:%S.%6NZ")

[stream:mysql]
LOOKUP-app_proto = stream_app_lookup sourcetype OUTPUT app,protocol
# extract the "object" (usually table name) field
REPORT-extract_object_for_stream_db = object_from_select_query,object_from_update_query,object_from_insert_query,object_from_delete_query,object_from_create_table_query,object_from_drop_table_query,object_from_truncate_query
FIELDALIAS-instance_name_for_stream_databases = dbname AS instance_name
FIELDALIAS-instance_version_for_stream_databases = version AS instance_version
FIELDALIAS-login_as_user = login AS user
EVAL-query_time = strptime(timestamp, "%Y-%m-%dT%H:%M:%S.%6NZ")

[stream:tds]
LOOKUP-app_proto = stream_app_lookup sourcetype OUTPUT app,protocol
# extract the "object" (usually table name) field
REPORT-extract_object_for_stream_db = object_from_select_query,object_from_update_query,object_from_insert_query,object_from_delete_query,object_from_create_table_query,object_from_drop_table_query,object_from_truncate_query
FIELDALIAS-instance_name_for_stream_databases = dbname AS instance_name
FIELDALIAS-instance_version_for_stream_databases = version AS instance_version
FIELDALIAS-login_as_user = login AS user
EVAL-query_time = strptime(timestamp, "%Y-%m-%dT%H:%M:%S.%6NZ")

[stream:dns]
LOOKUP-app_proto 		       = stream_app_lookup sourcetype OUTPUT app,protocol
FIELDALIAS-dns_answer_count            = ancount as answer_count
FIELDALIAS-dns_additional_answer_count = arcount as additional_answer_count
FIELDALIAS-dns_authority_answer_count  = nscount as authority_answer_count
FIELDALIAS-dns_query_count             = qdcount as query_count
FIELDALIAS-dns_answer                  = host_addr as answer

[stream:udp]
EVAL-transport = "udp"

###########################
# EventGen source mappings
###########################
[source::...sample.stream_smtp]
sourcetype = stream:smtp
TRANSFORMS-force_source_for_stream_smtp = force_source_for_stream_smtp

[source::...sample.stream_dns]
sourcetype = stream:dns
TRANSFORMS-force_source_for_stream_dns = force_source_for_stream_dns

[source::...sample.stream_http]
sourcetype = stream:http
TRANSFORMS-force_source_for_stream_http = force_source_for_stream_http

[source::...sample.stream_ssl]
sourcetype = stream:tcp
TRANSFORMS-force_source_for_stream_ssl = force_source_for_stream_ssl
