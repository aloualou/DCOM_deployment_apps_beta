######################################################
#
# Splunk Technology Add-On for Cisco IOS
#
#
# Copyright (C) 2013 Mikael Bjerkeland
# All Rights Reserved
#
######################################################

#
# Forcing the Sourcetype of Cisco IOS events
#
# Original: unknown
# New: cisco:ios
#
[force_sourcetype_for_cisco_ios]
DEST_KEY = MetaData:Sourcetype
REGEX = (?<reported_hostname>\S+)(\s(?<event_id>\d+)?\:\s(?:.\S+\:\s)?(?<reliable_time>[\.\*])?(?<device_time>.+)?)?\:\s(?:%|#)(?<facility>(?!POLICY_ENGINE|UCSM|FWSM|ASA|PIX|ACE)[A-Z0-9_]+)-(?<subfacility>[A-Z12_]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+):\s(?<message_text>.+)
FORMAT = sourcetype::cisco:ios

[force_sourcetype_for_cisco_ios-xr]
DEST_KEY = MetaData:Sourcetype
REGEX = (?<reported_hostname>\S+)\s(?<event_id>\d+)\:\s(?<node_id>(?:[A-Z]+)\/(?:\d+)\/(?:[A-Z0-9]+)\/(?:[A-Z0-9]+))\:(?<device_time>.+)\s?\:\s(?<process_name>[A-Za-z0-9_]+)\[(?<pid>\d+)\]\:\s%(?<category>[A-Za-z0-9_]+)-(?<facility>[A-Za-z0-9_]+)-(?<subfacility>[A-Za-z12_]*(-?[A-Za-z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+)\s:\s(?<message_text>.+)
FORMAT = sourcetype::cisco:ios

[force_sourcetype_for_cisco_ios-xe]
DEST_KEY = MetaData:Sourcetype
REGEX = (?<reported_hostname>\S+)\s(?<event_id>\d+)\:\s(?<event_id2>\d+)\:\s(?<reliable_time>[\.\*])?(?<device_time>.+):\s%(?<iosxe>IOSXE)-6-(?<platform>PLATFORM):(?<proccess_name>\S+): QFP:(?<qfp>\d+.\d+) Thread:(?<thread>\d+) TS:(?<ts>\d+) %(?<facility>[A-Z0-9_]+)-(?<subfacility>[A-Z12_]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+):\s(?<message_text>.+)
FORMAT = sourcetype::cisco:ios

# VERY experimental for RFC5424 support
[force_sourcetype_for_cisco_ios-rfc5424]
DEST_KEY = MetaData:Sourcetype
REGEX = (?<RFC5424_PRI>\<(?<RFC5424_PRIVAL>\d+)\>)(?<RFC5424_TIME>\d+) (?<rfc3389_time>\S+) (?<reported_hostname>\S+) (?<event_id>\d+)\s+(?<RFC5424_PROCID>\S+)\s+(?<RFC5424_MSGID>\S+)(?<device_time>.+)?\:\s(?:%|#)(?<facility>(?!POLICY_ENGINE|UCSM|FWSM|ASA|PIX|ACE)[A-Z0-9_]+)-(?<subfacility>[A-Z12_]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+):\s(?<message_text>.+)
FORMAT = sourcetype::cisco:ios

# TODO: ADD SUPPORT FOR THIS:
# Some messages also indicate the card and slot reporting the error. These messages begin with a percent 
# sign (%) and are structured as follows:
# %CARD-SEVERITY-MSG:SLOT %FACILITY-SEVERITY-MNEMONIC: Message-text
# CARD is a code that describes the type of card reporting the error. CIP, CIP2, ECPA, ECPA4, FEIP, PCPA, 
# and VIP are possible card types.
# MSG is a mnemonic that indicates that this is a message. It is always shown as MSG.
# SLOT indicates the slot number of the card reporting the error. It is shown as SLOT followed by a number 
# (for example, SLOT5).

[force_index_for_cisco_ios]
DEST_KEY = _MetaData:Index
REGEX = (?<reported_hostname>\S+)(\s(?<event_id>\d+)?\:\s(?:.\S+\:\s)?(?<reliable_time>[\.\*])?(?<device_time>.+)?)?\:\s(?:%|#)(?<facility>(?!POLICY_ENGINE|UCSM|FWSM|ASA|PIX|ACE)[A-Z0-9_]+)-(?<subfacility>[A-Z12_]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+):\s(?<message_text>.+)
FORMAT = ios

[force_index_for_cisco_ios-xr]
DEST_KEY = _MetaData:Index
REGEX = (?<reported_hostname>\S+)\s(?<event_id>\d+)\:\s(?<node_id>(?:[A-Z]+)\/(?:\d+)\/(?:[A-Z0-9]+)\/(?:[A-Z0-9]+))\:(?<device_time>.+)\s?\:\s(?<process_name>[A-Za-z0-9_]+)\[(?<pid>\d+)\]\:\s%(?<category>[A-Za-z0-9_]+)-(?<facility>[A-Za-z0-9_]+)-(?<subfacility>[A-Za-z12_]*(-?[A-Za-z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+)\s:\s(?<message_text>.+)
FORMAT = ios

# Cisco:IOS:Configuration
[force_hostname_for_cisco_ios_configuration]
REGEX = hostname (\S+)
FORMAT = host::$1
DEST_KEY = MetaData:Host

#
# Lookups
#
[cisco_ios_severity]
filename = cisco_ios_severity.csv

[cisco_ios_acl_excluded_ips]
filename = cisco_ios_acl_excluded_ips.csv

[cisco_ios_actions]
filename = cisco_ios_actions.csv

[cisco_ios_apptype]
filename = cisco_ios_apptype.csv

[cisco_ios_vendor]
filename = cisco_ios_vendor.csv

[cisco_ios_interface_name]
filename = cisco_ios_interface_name.csv
case_sensitive_match = true

[cisco_ios_hosts_last_period]
filename = cisco_ios_hosts_last_period.csv
#time_field = last_reported_time
#time_format = %s

#####################################
# 
# Field Extractions
#
#####################################
# Severity
[extract_cisco_ios-general]
REGEX = (?<reported_hostname>\S+)(\s(?<event_id>\d+)?\:\s(?:.\S+\:\s)?(?<reliable_time>[\.\*])?(?<device_time>.+)?)?\:\s(?:%|#)(?<facility>(?!POLICY_ENGINE|UCSM|FWSM|ASA|PIX|ACE)[A-Z0-9_]+)-(?<subfacility>[A-Z12_]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+):\s(?<message_text>.+)

# VERY experimental for RFC5424 support
[extract_cisco_ios-general-rfc5424]
REGEX = (?<RFC5424_PRI>\<(?<RFC5424_PRIVAL>\d+)\>)(?<RFC5424_TIME>\d+) (?<rfc3389_time>\S+) (?<reported_hostname>\S+) (?<event_id>\d+)\s+(?<RFC5424_PROCID>\S+)\s+(?<RFC5424_MSGID>\S+)(?<device_time>.+)?\:\s(?:%|#)(?<facility>(?!POLICY_ENGINE|UCSM|FWSM|ASA|PIX|ACE)[A-Z0-9_]+)-(?<subfacility>[A-Z12_]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+):\s(?<message_text>.+)

# Cisco IOS XR
[extract_cisco_ios-general-xr]
REGEX = (?<reported_hostname>\S+)\s(?<event_id>\d+)\:\s(?<node_id>(?:[A-Z]+)\/(?:\d+)\/(?:[A-Z0-9]+)\/(?:[A-Z0-9]+))\:(?<device_time>.+)\s?\:\s(?<process_name>[A-Za-z0-9_]+)\[(?<pid>\d+)\]\:\s%(?<category>[A-Z0-9_]+)-(?<facility>[A-Z0-9_]+)-(?<subfacility>[A-Z12_]*(-?[A-Z_]*))-?(?<severity_id>[0-7])-(?<mnemonic>[A-Z0-9_]+)\s:\s(?<message_text>.+)

[extract_cisco_ios-general-wlc]
REGEX = ^(?<filename>\S+):(?<filename_line>\d+)
SOURCE_KEY = message_text

## TODO: NEED TO ADD extract_cisco_ios-general-wlc (8500) and remove the # extraction above. Because time ends up in reported_hostname
# May 9 15:48:09 IP.ADD.RE.SS dig-4105-ct5508-2: *broffu_SocketReceive: May 09 15:48:09.868: #DATAPLANE-4-DP_MSG: broffu_fp_dapi_cmd.c:3613 FP0.07:(13731947)[cmdAddTclas:4941]failed to find scb 442b.0355.8067
#


##################################### Specific extractions below

[extract_cisco_ios-acl]
REGEX = list\s(?<rule>.+)\s(?<vendor_action>denied|permitted)\s(?<proto>\d+|tcp|udp|igmp|ipinip|gre|eigrp|ospf|nosip|pim|icmp|sctp|icmpv6|)\s(?<src_ip>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b)\(?(?<src_port>\d+)?\)?(\s\((?<src_int>\S+) (?<src_mac>\S+)\))?\s->\s(?<dest_ip>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b)(\(?(?<dest_port>\d+)?\))?(, (?<num_packets>\S+) packet(s)?)?(\s\[(?<correlation_tag>\S+)\])?

[extract_cisco_ios-acl-2]
REGEX = IPACCESSLOGS(\s)?: list (?<rule>.+) (?<vendor_action>denied|permitted) (?<src_ip>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b) (?<num_packets>\d+) packet(s)?(\s\[(?<correlation_tag>\S+)\])?

[extract_cisco_ios-acl-nexus]
REGEX = %ACLLOG-.+-(ACLLOG_NEW_FLOW|ACLLOG_FLOW_INTERVAL)(\s)?: Source IP: (?<src_ip>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b), Destination IP: (?<dest_ip>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b), Source Port: (?<src_port>\d+), Destination Port: (?<dest_port>\d+), Source Interface: (?<src_int>\S+)?, Protocol: "(?<proto>\S+)"\((?<proto_port>\d+)\), Hit-count = (?<num_packets>\d+)

[extract_cisco_ios-duplex_mismatch]
REGEX = %CDP-.+-DUPLEX_MISMATCH(\s)?: duplex mismatch discovered on (?<cdp_local_interface>\S+) \((?<cdp_local_duplex>.+)\), with (?<cdp_neighbor>\S+) (?<cdp_remote_interface>.+) \((?<cdp_remote_duplex>.+)\) 

[extract_cisco_ios-link_error]
REGEX = %LINK-.+-ERROR(\s)?: (?<src_int>\S+) is experiencing errors

########################
# RADIUS 
########################
[extract_cisco_ios-radius_dead_alive]
REGEX = %RADIUS-.+-RADIUS_(DEAD|ALIVE)(\s)?: RADIUS server (?<dest_ip>\S+):(?<dest_port_authentication>\d+),(?<dest_port_accounting>\d+) (?<result>.+)

########################
# 802.1x / Dot1x / AUTHMGR / EPM
########################
[extract_cisco_ios-dot1x_switch_err_vlan_not_found]
REGEX = %DOT1X_SWITCH-.+-ERR_VLAN_NOT_FOUND(\s)?: Attempt to assign non-existent or shutdown VLAN (?<src_vlan>\S+) to 802.1x port (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*))(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-dot1x_auth]
REGEX = %DOT1X-.+-[^:]+(\s)?: Authentication (?<result>\S+) for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*))(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-mab_auth]
REGEX = %MAB-.+-[^:]+(\s)?: Authentication (?<result>\S+) for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*))(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-authmgr_fail_success]
REGEX = %AUTHMGR-.+-(FAIL|SUCCESS)(\s)?: Authorization (?<result>\S+) for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*))(\sAuditSessionID (?<audit_session_id>\S+))? 

[extract_cisco_ios-authmgr_start]
REGEX = %AUTHMGR-.+-START(\s)?: Starting '(?<authenticator>\w+)' for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*))(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-authmgr_result]
REGEX = %AUTHMGR-.+-RESULT(\s)?: Authentication result '(?<result>\S+)' from '(?<authenticator>\w+)' for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*))(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-authmgr_failover]
REGEX = %AUTHMGR-.+-FAILOVER(\s)?: Failing over from '(?<authenticator>\w+)' for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*))(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-authmgr_nomoremethods]
REGEX = %AUTHMGR-.+-NOMOREMETHODS(\s)?: Exhausted all authentication methods for client \((?<src_mac>\w+.\w+.\w+)\) on Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*))(\sAuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-authmgr_vlanassign]
REGEX = %AUTHMGR-.+-VLANASSIGN(\s)?: VLAN (?<src_vlan>\d+) assigned to Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*))(\sAuditSessionID (?<audit_session_id>\S+))? 

[extract_cisco_ios-AUTHMGR-5-SECURITY_VIOLATION]
REGEX = %AUTHMGR-.+-SECURITY_VIOLATION(_VLAN)?(\s)?: Security violation on the interface (?<src_int>\S+), new MAC address \((?<src_mac>\w+.\w+.\w+)\) is seen( on vlan (?<src_vlan>\d+))?.(\s?)(AuditSessionID (?<audit_session_id>\S+))?

[extract_cisco_ios-epm_ipevent]
REGEX = %EPM-.+-(IPEVENT|POLICY_REQ)(\s)?: IP (?<src_ip>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b)\| MAC (?<src_mac>\w+.\w+.\w+)\| AuditSessionID (?<audit_session_id>[A-F0-9]+)\| AUTHTYPE (?<authenticator>\w+)\| EVENT (?<auth_event>\S+)

[extract_cisco_ios-EPM-6-POLICY_APP_SUCCESS_FAILURE]
REGEX = %EPM-.+-POLICY_APP_(SUCCESS|FAILURE)(\s)?: IP (?<src_ip>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b)\| MAC (?<src_mac>\w+.\w+.\w+)\| AuditSessionID (?<audit_session_id>[A-F0-9]+)\| AUTHTYPE (?<authenticator>\w+)\| POLICY_TYPE (?<policy_type>.+)\| POLICY_NAME (?<policy_name>.+)\| RESULT (?<result>[^\|]+)(\| REASON (?<reason>.+))?

########################
# DHCP
########################
[extract_cisco_ios-dhcp_snooping_match_mac_fail]
REGEX = %DHCP_SNOOPING-.+-DHCP_SNOOPING_MATCH_MAC_FAIL(\s)?: DHCP_SNOOPING drop message because the chaddr doesn't match source mac, message type: (?<message_type>[A-Z_]+), chaddr: (?<chaddr>[0-9a-fA-F]{4}.[0-9a-fA-F]{4}.[0-9a-fA-F]{4}), MAC sa: (?<src_mac>[0-9a-fA-F]{4}.[0-9a-fA-F]{4}.[0-9a-fA-F]{4})

########################
# Threshold
########################
[extract_cisco_ios-sff8472_threshold-violation]
REGEX = %SFF8472-.+-THRESHOLD_VIOLATION(\s)?: (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*)): (?<alarm>.+) (?<trigger>low|high) (?<notice>alarm|warning);\s+Operating value:\s+(?<operating_value>\S+) (?<unit>\S+), Threshold value:\s+(?<threshold_value>\S+) (\S+)\.(\s\((?<switch>.+)\))?


########################
# SSH + AUTHPRIV
########################
[extract_cisco_ios-ssh_ssh2_session]
REGEX = %SSH-.+-SSH2_(SESSION|CLOSE)(\s)?: SSH2 Session(\srequest)? from (?<src_ip>\S+) \(tty = (?<tty>\d+)\)(\sfor user '(?<user>\S+)')? using crypto cipher '(?<cipher>\S*)', hmac '(?<hmac>\S*)' (?<result>Failed|Succeeded|closed) 

[extract_cisco_ios-ssh_ssh2_userauth]
REGEX = %SSH-.+-SSH2_USERAUTH(\s)?: User '(?<user>\S+)' authentication for SSH2 Session from (?<src_ip>\S+) \(tty = (?<tty>\d+)\) using crypto cipher '(?<cipher>\S*)', hmac '(?<hmac>\S*)' (?<result>Failed|Succeeded) 

[extract_authpriv_system_msg]
REGEX = %AUTHPRIV-.+-SYSTEM_MSG(\s)?: pam_aaa:Authentication failed for user (?<user>\S+) from (?<src_ip>\S+)


########################
# SMI (Smart Install/Vstack)
# http://www.cisco.com/en/US/docs/switches/lan/smart_install/configuration/guide/messages.html
########################
[extract_cisco_ios-smi_upgrd]
REGEX = %SMI-.+-UPGRD_(STARTED|SUCCESS|FAILED)(\s)?: Device \(IP address: (?<dest_ip>\S+)\) (?<result>.+) 

[extract_cisco_ios-smi_switch_add]
REGEX = %SMI-.+-SWITCH_ADD(\s)?: (?<result>New Device detected by Director) with mac address: (?<dest_mac>[0-9a-fA-F]{4}.[0-9a-fA-F]{4}.[0-9a-fA-F]{4})

[extract_cisco_ios-smi_switch_remove]
REGEX = %SMI-.+-SWITCH_REMOVE(\s)?: Device (?<dest_mac>[0-9a-fA-F]{4}.[0-9a-fA-F]{4}.[0-9a-fA-F]{4}) (?<result>.+)


########################
# HSRP 
# http://www.cisco.com/en/US/tech/tk648/tk362/technologies_tech_note09186a0080094afd.shtml#topic13
########################
[extract_cisco_ios-standby_statechange]
REGEX = %(STANDBY|HSRP)-.+-STATECHANGE(\s)?: (?<src_int>\S+) (Grp|Group) (?<group_id>\d+) state (?<state_from>\S+) -> (?<state_to>\S+)


########################
# DTP (Dynamic Trunking Protocol) 
########################
# switchport nonegotiate should be suggested when we get this...
[extract_cisco_ios-dtp_domainmismatch]
REGEX = %DTP-.+-DOMAINMISMATCH(\s)?: Unable to perform trunk negotiation on port (?<src_int>\S+) because of VTP domain mismatch

[extract_cisco_ios-dtp_trunkporton]
REGEX = %DTP-.+-(NON)?TRUNKPORTON(\s)?: Port (?<src_int>\S+) has become (?<result>dot1q trunk|non-trunk)

[extract_cisco_ios-ip_dupaddr]
REGEX = %IP-.+-DUPADDR(\s)?: Duplicate address (?<src_ip>\S+) on (?<src_int>\S+), sourced by (?<src_mac>[0-9a-fA-F]{4}.[0-9a-fA-F]{4}.[0-9a-fA-F]{4}) 


########################
# SNMP 
########################
[extract_cisco_ios-ip_snmp_notrapip]
REGEX = %IP_SNMP-.+-NOTRAPIP(\s)?: SNMP trap source (?<src_int>\S+) has no ip address

########################
# ILPOWER (PoE)
########################
[extract_cisco_ios-ilpower]
REGEX = %ILPOWER-.+-(POWER_GRANTED|IEEE_DISCONNECT)(\s)?: Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*)): (?<result>.+)

[extract_cisco_ios-ILPOWER-3-CONTROLLER_PORT_ERR]
REGEX = %ILPOWER-.+-CONTROLLER_PORT_ERR(\s)?: Controller port error, Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*)): (?<reason>.+)

########################
# Wireless 
########################
[extract_cisco_ios-lwapp_radio_crash]
REGEX = (?:%|#)LWAPP-.+-RADIO_CRASH(\s)?: .+ Radio \((?<radio_id>\d+)\) .+ AP (?<src_mac>[0-9a-fA-F]{2}.[0-9a-fA-F]{2}.[0-9a-fA-F]{2}.[0-9a-fA-F]{2}.[0-9a-fA-F]{2}.[0-9a-fA-F]{2})

[extract_cisco_ios-lwapp_akita_err]
REGEX = (?:%|#)LWAPP-.+-AKITA_ERR(\s)?: AP \((?<src_mac>[0-9a-fA-F]{2}.[0-9a-fA-F]{2}.[0-9a-fA-F]{2}.[0-9a-fA-F]{2}.[0-9a-fA-F]{2}.[0-9a-fA-F]{2})\) is not supported

[extract_cisco_ios-LWAPP-4_AP_DUPLEX_MISMATCH]
REGEX = (?:%|#)LWAPP-.+-AP_DUPLEX_MISMATCH(\s)?: \S+ Duplex mismatch discovered on (?<cdp_local_interface>\S+) \((?<cdp_local_duplex>.+)\), with (?<cdp_neighbor>\S+) (?<cdp_remote_interface>.+) \((?<cdp_remote_duplex>.+)\) for AP (?<dvc>\S+)

[extract_cisco_ios-DOT1X-src_mac]
REGEX = (?:%|#)DOT1X-.+(C|c)lient (?<src_mac>[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2})

[extract_cisco_ios-PEM-1-WEBAUTHFAIL]
REGEX = (?:%|#)PEM-.+-WEBAUTHFAIL(\s)?: .+ (?<result>.+) for the station (?<src_mac>[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2})

[extract_cisco_ios-WIRELESS-AP]
REGEX = (?:%|#)(LWAPP|CAPWAP|APF)-.+-.+(\s)?:.+AP (Client)?(?<ap_mac>[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2})

########################
# Nexus 
########################
# Link up or down
[extract_cisco_ios-ethport_if_down]
REGEX = %ETHPORT-.+-IF_DOWN_.+: Interface (?<src_int>\S+) is (?<port_status>down) \((?<reason>.+)\)

[extract_cisco_ios-ethport_if_up]
REGEX = %ETHPORT-.+-IF_UP(\s)?: Interface (?<src_int>\S+) is (?<port_status>up) in mode (?<mode>\S+)

[extract_cisco_ios-ethport_if_speed]
REGEX = %ETHPORT-.+-SPEED(\s)?: Interface (?<src_int>\S+), operational speed changed to (?<speed>\d+) (?<unit>\S+)

# Port channel / Etherchannel
# Etherchannel up or down
[extract_cisco_ios-eth_port-port]
REGEX = %ETH_PORT_CHANNEL-.+-PORT_(UP|DOWN|SUSPENDED)(\s)?: (?<dest_int>\S+): (?<src_int>\S+) is (?<action>up|down|suspended)

[extract_cisco_ios-eth_port-port_individual_down]
REGEX = %ETH_PORT_CHANNEL-.+-PORT_INDIVIDUAL_DOWN(\s)?: individual port (?<src_int>\S+) is (?<action>down)

[extract_cisco_ios-eth_port-port_individual]
REGEX = %ETH_PORT_CHANNEL-.+-PORT_INDIVIDUAL(\s)?: port (?<src_int>\S+) is (?<compatibility>operationally individual)

[extract_cisco_ios-ethport_if_down_port_channel_members_down]
REGEX = %ETHPORT-.+-IF_DOWN_PORT_CHANNEL_MEMBERS_DOWN(\s)?: Interface (?<dest_int>\S+) is (?<action>down) \((?<reason>.+)\)

[extract_cisco_ios-EC-5-L3DONTBNDL]
REGEX = %EC-.+-L3DONTBNDL(1|2)(\s)?: (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*)) suspended: (?<reason>.+).

[extract_cisco_ios-EC-5-PORTDOWN]
REGEX = %EC-.+-PORTDOWN(\s)?: Shutting down (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*)) (?<reason>.+)

[extract_cisco_ios-EC-5-STAYDOWN]
REGEX = %EC-.+-STAYDOWN(\s)?: (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*)) (?<reason>.+)


########################
# Spanning tree
########################

# %SPANTREE-6-PORT_STATE: Port Fa2/0/20 instance 205 moving from forwarding to disabled (RG-SW-S-2)
[extract_cisco_ios-spantree-port_state]
REGEX = %SPANTREE-.+-PORT_STATE(\s)?: Port (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*)) instance (?<src_vlan>\d+) moving from (?<state_from>\S+) to (?<state_to>\S+)(\s\(?(?<switch>.+)\))?

# %SPANTREE-7-PORTDEL_SUCCESS: FastEthernet2/0/20 deleted from Vlan 205 (RG-SW-S-2)
[extract_cisco_ios-spantree-portdel_success]
REGEX = %SPANTREE-.+--PORTDEL_SUCCESS(\s)?: (?<src_int>\S+) deleted from (?<src_int_type>\S+) (?<src_vlan>\d+)(\s\(?(?<switch>.+)\))?

[extract_cisco_ios-spantree_topotrap]
REGEX = %SPANTREE-.+-TOPOTRAP(\s)?: Topology Change Trap for vlan (?<src_vlan>\d+)

[extract_cisco_ios-spantree_rootchange]
REGEX = %SPANTREE-.+-ROOTCHANGE(\s)?: Root Changed for vlan (?<src_vlan>\d+): New Root Port is (?<src_int>\S+). New Root Mac Address is (?<src_mac>\w+.\w+.\w+)


########################
# Routing
########################

[extract_cisco_ios-LDP-5-SP]
REGEX = %LDP-.+-SP(\s)?: (?<neighbor>\S+):\d+: (?<result>.+)

[extract_cisco_ios-OSPF-4-ERRRCV]
REGEX = %OSPF-.+-ERRRCV(\s)?: Received invalid packet: (?<reason>.+) from (?<neighbor>\S+), (?<src_int>\S+) 


########################
# Configuration
########################

[extract_cisco_ios-SYS-5-PRIV_I]
REGEX = %SYS-.+-PRIV_I(\s)?: Privilege level set to (?<privilege_level>\d+) by (?<user>\S+)(\s\on)?(\s)?(?<line>\w+)?(\s\()?(?<src_ip>[^\)]+)?\)?

########################
# IOS Firewall
########################

[extract_cisco_ios-FW-6-SESS_AUDIT_TRAIL]
REGEX = %FW-.+-SESS_AUDIT_TRAIL(\s)?: (?<vendor_action>\S+) (?<proto>\S+) session: initiator \((?<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<src_port>\d+)\) sent (?<send_bytes>\d+) bytes -- responder \((?<dest_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<dest_port>\d+)\) sent (?<recv_bytes>\d+) bytes

[extract_cisco_ios-FW-6-SESS_AUDIT_TRAIL_START_STOP]
REGEX = %FW-.+-SESS_AUDIT_TRAIL_(START|STOP)(\s)?: (?<vendor_action>\S+) (?<proto>\S+) session: initiator \((?<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<src_port>\d+)\) -- responder \((?<dest_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<dest_port>\d+)\)

# Seen in IOS-XE 3.1
[extract_cisco_ios-zbf-FW-6-SESS_AUDIT_TRAIL_START_STOP]
REGEX = %FW-.+-SESS_AUDIT_TRAIL_(START|STOP)(\s)?: \(target:class\)-\((?<zones>\S+):(?<class_map>\S+)\):(?<vendor_action>\S+) (?<proto>\S+) session: initiator \((?<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<src_port>\d+)\) -- responder \((?<dest_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<dest_port>\d+)\)\s*(from)\s*(?<src_int>\S*)

[extract_cisco_ios-FW-6-DROP_PKT]
REGEX = %FW-.+-DROP_PKT(\s)?: (?<vendor_action>Dropping) (?<proto>\S+) session (?<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<src_port>\d+) (?<dest_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<dest_port>\d+) due to (?<reason>.+) with ip ident (?<ip_ident>\d+) tcpflags (?<tcp_flags>\S+) seq.no (?<sequence_number>\d+) ack (?<ack>\d+)

[extract_cisco_ios-IPNAT-6]
REGEX = %IPNAT-.+-(\S+)(\s)?: ((?<vendor_action>Created|Deleted)\s)?(?<proto>\S+) (?<nat_inside_local_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<nat_inside_local_port>\d+) (?<nat_inside_global_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<nat_inside_global_port>\d+) (?<nat_outside_local_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<nat_outside_local_port>\d+) (?<nat_outside_global_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<nat_outside_global_port>\d+)

[extract_cisco_ios-NAT-6]
REGEX = %NAT-.+-LOG_TRANSLATION(\s)?: (?<vendor_action>\S+) Translation (?<proto>\S+) (?<nat_inside_local_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<nat_inside_local_port>\d+) (?<nat_inside_global_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<nat_inside_global_port>\d+) (?<nat_outside_local_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<nat_outside_local_port>\d+) (?<nat_outside_global_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?<nat_outside_global_port>\d+) (?<num>\d+)


########################
# ISDN
########################

[extract_cisco_ios-ISDN-6-CONNECT]
REGEX = %ISDN-.+-CONNECT(\s)?: Interface (?<src_int>\S+):(?<channel>\d+) is now connected to (?<dest_phone_number>\d+)

[extract_cisco_ios-ISDN-6-DISCONNECT]
REGEX = %ISDN-.+-DISCONNECT(\s)?: Interface (?<src_int>\S+):(?<channel>\d+) disconnected from (?<dest_phone_number>\d+)\s?,\s?call lasted (?<call_duration>\d+) seconds

########################
# UNCATEGORIZED
########################
[extract_cisco_ios-license_expired]
REGEX = %LICENSE-.+-EXPIRED(\s)?: License for feature (?<feature>\S+) (?<feature_version>\S+) has expired (?<expired_at>.+) ago. UDI=(?<udi>\S+):(?<serial_number>[A-Z0-9]+)?

[extract_cisco_ios-IOS_LICENSE_IMAGE_APPLICATION-6-NO_LICENSE]
REGEX = %IOS_LICENSE_IMAGE_APPLICATION.+-NO_LICENSE(\s)?: .+udi = (?<udi>\S+):(?<serial_number>[A-Z0-9]+)?

[extract_cisco_ios-SYS-3-CPUHOG]
REGEX = %SYS-.+-CPUHOG(\s)?: Task is running for \((?<duration>\d+)\)msecs, more than \((?<duration_limit>\d+)\)msecs \(.+\),process = (?<process>.+). 

[extract_cisco_ios-SYS-3-CPUHOG-2]
REGEX = %SYS-.+-CPUHOG(\s)?: Task ran for (?<duration>\d+) msec \(.+\), process = (?<process>.+),

[extract_cisco_ios-DHCP-6-ADDRESS_ASSIGN]
REGEX = %DHCP-.+-ADDRESS_ASSIGN(\s)?: Interface (?<dest_int>\S+) assigned DHCP address (?<dest_ip>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b), mask (?<subnet_mask>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b), hostname (?<hostname>.+)

[extract_cisco_ios-CLEAR-5-COUNTERS]
REGEX = %CLEAR-.+-COUNTERS(\s)?: Clear counter on interface (?<src_int>\S+) by (?<user>\S+)(\s\on)?(\s)?(?<line>\w+)?(\s\()?(?<src_ip>[^\)]+)?\)?

[extract_cisco_ios-CERM-4-RX_TX_BW_LIMIT]
REGEX = %CERM-.+-(RX|TX)_BW_LIMIT(\s)?: Maximum (Rx|Tx) Bandwidth limit of (?<kbps>\S+) Kbps reached for (?<feature>\S+) functionality with (?<technology_package>\S+)

[extract_cisco_ios-UDLD-4-UDLD_PORT_DISABLED]
REGEX = %UDLD-.+-UDLD_PORT_DISABLED(\s)?: UDLD disabled interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*)), (?<reason>.+)

[extract_cisco_ios-TRACKING-5-STATE]
REGEX = %TRACKING-.+-STATE(\s)?: (?<ip_sla_id>\d+) (?<ip_sla_type>.+) (?<ip_sla_id_2>\d+) reachability (?<state_from>\S+)->(?<state_to>\S+)

[extract_cisco_ios-RTT-6-SAATHRESHOLD]
REGEX = %RTT-.+-SAATHRESHOLD(\s)?:(\s)?RTR\((?<ip_sla_id>\d+)\):(?<reason>.+)

[extract_cisco_ios-DIALER-6-BIND_UNBIND]
REGEX = %DIALER-.+-(BIND|UNBIND)(\s)?: Interface (?<src_int>(?<src_int_prefix>\D+)(?<src_int_suffix>(\d+)(\S)*)) (bound to|unbound from) profile (?<dest_int>(?<dest_int_prefix>\D+)(?<dest_int_suffix>(\d+)(\S)*))

[extract_cisco_ios-XCONNECT-5-PW_STATUS]
REGEX = %XCONNECT-.+-PW_STATUS(\s)?: MPLS peer (?<dest_ip>\S+)? vcid (?<virtual_channel_id>\d+), VC (?<state_to>(UP|DOWN))\, VC state (?<state_to_2>(UP|DOWN))
