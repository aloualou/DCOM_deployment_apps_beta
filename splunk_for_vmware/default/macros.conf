# Copyright (C) 2005-2014 Splunk Inc. All Rights Reserved.
[VcLogSourcetypes]
definition = (sourcetype=vmware:vclog* OR sourcetype=vmware:vclicense) 

[VCListDup]
definition = sourcetype="vmware:inv" source=AboutInfo subpath=vim/service_content/about productLineId=vpx

[VCList]
definition = `VCListDup` | dedup host | sort host
 
[VCList(1)]
args = param
definition = `VCListDup` $param$ | dedup host | sort host
 
[removeInternalFields]
definition = fields - timestartpos timeendpos punct index date_* sourcetype linecount splunk_server

[BytesToGigaBytes(1)]
args = bytes
definition = tostring(round(($bytes$)/(1024*1024*1024), 2))

[format_bytes(1)]
args =bytes
definition =if($bytes$>1073741824, tostring(round($bytes$/1073741824,2))+" GB", if($bytes$>1048576, tostring(round($bytes$/1048576,2))+" MB", if($bytes$>1024, tostring(round($bytes$/1024))+" KB", tostring($bytes$)+" Bytes")))

[RemoveTypeInPath(1)]
args = field
definition = rex mode=sed "s/[^\/:]*://g" field=$field$

[StrictBucket(3)]
args = field, bins, max
definition =  eval binSpan=$max$/$bins$ | eval binIndex=floor($field$/binSpan) | eval $field$=tostring(floor(floor($field$/binSpan)*binSpan)) + "-" + tostring(floor((floor($field$/binSpan) + 1)*binSpan)) | eval binIndex=if(binIndex>=$bins$, $bins$-1, binIndex)


####################################################

[BusinessHours]
definition = eval subtime=case(substr(strftime(_time,"%H:%M"),1,2)=="08",1,substr(strftime(_time,"%H:%M"),1,2)=="09",1,substr(strftime(_time,"%H:%M"),1,2)=="10",1,substr(strftime(_time,"%H:%M"),1,2)=="11",1,substr(strftime(_time,"%H:%M"),1,2)=="12",1,substr(strftime(_time,"%H:%M"),1,2)=="13",1,substr(strftime(_time,"%H:%M"),1,2)=="14",1,substr(strftime(_time,"%H:%M"),1,2)=="15",1,substr(strftime(_time,"%H:%M"),1,2)=="16",1)

[OffHours]
definition = eval subtime=case(substr(strftime(_time,"%H:%M"),1,2)=="17",1,substr(strftime(_time,"%H:%M"),1,2)=="18",1,substr(strftime(_time,"%H:%M"),1,2)=="19",1,substr(strftime(_time,"%H:%M"),1,2)=="20",1,substr(strftime(_time,"%H:%M"),1,2)=="21",1,substr(strftime(_time,"%H:%M"),1,2)=="22",1,substr(strftime(_time,"%H:%M"),1,2)=="23",1,substr(strftime(_time,"%H:%M"),1,2)=="24",1,substr(strftime(_time,"%H:%M"),1,2)=="01",1,substr(strftime(_time,"%H:%M"),1,2)=="02",1,substr(strftime(_time,"%H:%M"),1,2)=="03",1,substr(strftime(_time,"%H:%M"),1,2)=="04",1,substr(strftime(_time,"%H:%M"),1,2)=="05",1,substr(strftime(_time,"%H:%M"),1,2)=="06",1,substr(strftime(_time,"%H:%M"),1,2)=="07",1)

[nonroutableIP]
definition = (ipAddress=10.0.0.0/8 OR ipAddress=172.16.0.0/16 OR ipAddress=192.168.0.0/24 OR ipAddress=127.0.0.1)

#Create a field 'HostType' which has value "VC" or "ESX/i"
[GetHostType]
definition = eval HostType=if(vc==host, "VC", "ESX/i")

[filter_by_time(1)]
args = showall
definition = eval valid=if($showall$==1, 1, if(endTime >= info_min_time OR now() - endTime < 1800, 1, 0))

[d_proactivemonitoring(5)]
args = fields, entitytype, perftype, showall, interval
# interval: set this value 0 for non-summary perf data
#   For summary perf data, set this value seconds of collection interval.
#   The $fields$ and 'max' value will be normalize to 1 hour (3600) secends.
definition = $fields$=* perftype=$perftype$ | stats avg($fields$) as $fields$ max($fields$) as max by meid | rename meid as id | eval $fields$=if($interval$>0, $fields$/($interval$/20), $fields$) | thresholdlookup entitytype=$entitytype$,perftype=$perftype$,metric=$fields$ | fields threshold_severity,id,name,parent,type,max | append [|inputlookup FullHierarchy | addinfo | `filter_by_time($showall$)` | eval HostSystem_view=if(type="HostSystem" OR type="ClusterComputeResource" OR type="VirtualCenter", 1, 0) | eval VirtualMachine_view=if(type="HostSystem" OR type="VirtualMachine" OR type="ClusterComputeResource" OR type="VirtualCenter", 1, 0) | search valid=1 $entitytype$_view=1 | eval parent=if(type="VirtualMachine",hostsystemmeid,if(type="HostSystem",clustermeid,if(type="ClusterComputeResource",(mvindex(split(meid,":"),0) + ":group-d1"),if(type="VirtualCenter","none",""))))| eval id=meid | eval parent=if((vc="unmanaged" AND type="HostSystem"),"none",parent) | fields id,type,parent,name | dedup id | eval parent=if(match(parent, ":N/A$"),(rtrim(parent,":N/A")+":group-d1"),parent)] | stats values(threshold_severity) as threshold_severity values(name) as name values(parent) as parent values(type) as type max(max) as max by id | eval threshold_severity=if(isnull(threshold_severity),if(type="VirtualMachine","unknown",threshold_severity),threshold_severity)| eval critical=if(threshold_severity="critical",1,False()) | eval warning=if(threshold_severity="warning",1,False()) | eval normal=if(threshold_severity="normal",1,False())| eval unknown=if(threshold_severity="unknown",1,False()) | eventstats max(max) as max | eval max=if($interval$>0, max*(3600/$interval$), max) | eval metric="$fields$" | eval entity=type | rename type as Type
